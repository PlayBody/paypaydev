<?php

/*
 * This file is part of EC-CUBE
 *
 * Copyright(c) EC-CUBE CO.,LTD. All Rights Reserved.
 *
 * http://www.ec-cube.co.jp/
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Plugin\MarketPlace4\Repository;


use Doctrine\ORM\QueryBuilder;
use Eccube\Doctrine\Query\QueryCustomizer;
use Eccube\Repository\QueryKey;
use Eccube\Request\Context;
use Plugin\MarketPlace4\Repository\OrderMemberRepository;
use Eccube\Repository\MemberRepository;

/**
 * ProductClassRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdminOrderSearchExtension implements QueryCustomizer
{
    /**
     * @var Context
     */
    private $context;

    /**
     * @var OrderMemberRepository
     */
    private $orderMemberRepository;
    /**
     * @var MemberRepository
     */
    private $memberRepository;

    /**
     * ProductListWhereCustomizer constructor.
     *
     * @param OrderMemberRepository $orderMemberRepository
     * @param MemberRepository $memberRepository
     * @param Context $context
     */
    public function __construct(Context $context, OrderMemberRepository $orderMemberRepository, MemberRepository $memberRepository)
    {
        $this->context = $context;
        $this->orderMemberRepository = $orderMemberRepository;
        $this->memberRepository = $memberRepository;
    }

    /**
     * {@inheritdoc}
     */
    public function customize(QueryBuilder $builder, $params, $queryKey)
    {
        if (count($params['Member'])<1) $params['Member'] = $this->memberRepository->findAll();
        // noteが空またはログイン中の会員番号の商品のみ検索結果に表示
        $Admin = $this->context->getCurrentUser();
        if ($Admin->getAuthority()->getId()>0){
            $OrderMembers = $this->orderMemberRepository->findBy(['Member' => $Admin]);
        }else{
            $OrderMembers = [];
            $f = [];
            foreach ($params['Member'] as $member ){
                $tmp = $this->orderMemberRepository->findBy(['Member' => $member]);
                foreach ($tmp as $item){
                    if ($f[$item->getOrder()->getId()]) continue;
                    $f[$item->getOrder()->getId()] = 1;
                    $OrderMembers[] = $item;
                }
            }
        }

        $Orders = [];
        foreach ($OrderMembers as $om){
            $Orders[] = $om->getOrder();
        }

        $builder->andWhere($builder->expr()->in('o', ':Orders'))
        ->setParameter('Orders', $Orders);

        if ($params['DeliveryType'] > 0){
            $builder->leftJoin('s.DeliveryType', 'dt');
            $builder->andWhere('dt.id = :delivery_type_id')->setParameter('delivery_type_id', $params['DeliveryType']);
        }

    }
    /**
     * カスタマイズ対象のキーを返します。
     *
     * @return string
     */
    public function getQueryKey()
    {
        return QueryKey::ORDER_SEARCH_ADMIN;
    }
}
