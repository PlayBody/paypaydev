<?php

namespace Plugin\SlnPayment4\Repository;

use Eccube\Repository\AbstractRepository;
use Plugin\SlnPayment4\Entity\MemCardId;
use Symfony\Bridge\Doctrine\RegistryInterface;

/**
 * MemCardIdRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MemCardIdRepository extends AbstractRepository
{
    public function __construct(RegistryInterface $registry)
    {
        parent::__construct($registry, MemCardId::class);
    }

    /**
     * @param \Eccube\Entity\Customer $Customer
     * @return number
     */
    public function getMemId(\Eccube\Entity\Customer $Customer) 
    {
        /* @var \Plugin\SlnPayment4\Entity\MemCardId $memId */
        $memId = $this->find($Customer->getId());
        if ($memId) {
            return $memId->getMemId();
        }
        
        return 0;
    }
    
    /**
     * @param \Eccube\Entity\Customer $Customer
     */
    public function nextMemId(\Eccube\Entity\Customer $Customer) 
    {
        $em = $this->getEntityManager();
        
        $memId = $this->find($Customer->getId());
        if ($memId) {
            $memId->setMemId($memId->getMemId() + 1);
        } else {
            $memId = new \Plugin\SlnPayment4\Entity\MemCardId();
            $memId->setCustomerId($Customer->getId());
            $memId->setMemId(1);
        }
        
        $em->persist($memId);
        $em->flush();
    }
}
